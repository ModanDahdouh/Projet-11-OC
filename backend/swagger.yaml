swagger: "2.0"
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: "1.0.0"
  termsOfService: "http://swagger.io/terms/"
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: "#/definitions/Login"
      produces:
        - application/json
      responses:
        "200":
          description: Login Successfully
          schema:
            $ref: "#/definitions/LoginResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: "#/definitions/User"
      produces:
        - application/json
      responses:
        "200":
          description: Signup Successfully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      #produces:
      # - application/json
      responses:
        "200":
          description: User profile retrieved successully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: "#/definitions/UserProfile"
      produces:
        - application/json
      responses:
        "200":
          description: User profile retrieved successully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /account/{accountId}/transactions:
    get:
      security:
        - Bearer: []
      tags:
        - Account Module
      summary: Account API
      description: API for fetching transactions of an account
      parameters:
        - in: path
          name: accountId
          type: string
          required: true
          description: Numeric ID of the account to get
      produces:
        - application/json
      responses:
        "200":
          description: Transactions account retrieved successully
          schema:
            $ref: "#/definitions/GetAccountTransactionsApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /account/{accountId}/transactions/{transactionId}:
    get:
      security:
        - Bearer: []
      tags:
        - Account Module
      summary: Account API
      description: API for fetching one transaction of an account
      parameters:
        - in: path
          name: accountId
          type: string
          required: true
          description: Numeric ID of the account to get
        - in: path
          name: transactionId
          type: string
          required: true
          description: Numeric ID of the transaction to get
      produces:
        - application/json
      responses:
        "200":
          description: Transaction retrieved successully
          schema:
            $ref: "#/definitions/GetTransactionApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /transactions/{transactionID}/category:
    put:
      tags:
        - Account Module
      summary: Update transaction's category
      description: API for updating category of transaction
      security:
        - Bearer: []
      parameters:
        - in: path
          name: transactionID
          description: ID of a transaction
          required: true
          type: string
        - in: body
          name: category
          description: Modified transaction's category
          required: true
          schema:
            $ref: "#/definitions/TransactionCategory"
      responses:
        "200":
          description: Transaction's category modified successfully
          schema:
            $ref: "#/definitions/TransactionCategory"
        "401":
          description: Unauthorized user
        "404":
          description: Transaction not found
        "500":
          description: Internal Servor Error
  /transactions/{transactionID}/note:
    post:
      tags:
        - Account Module
      summary: Add transaction's note
      description: API for adding a note to a transaction
      security:
        - Bearer: []
      parameters:
        - in: path
          name: transactionID
          description: ID of a transaction
          required: true
          type: string
        - in: body
          name: note
          description: New transaction's note
          required: true
          schema:
            $ref: "#/definitions/TransactionNote"
      responses:
        "200":
          description: Note added to the transaction successfully
          schema:
            $ref: "#/definitions/TransactionResponseNote"
        "401":
          description: Unauthorized user
        "404":
          description: Note not created
        "500":
          description: Internal Server Error

  /transactions/{transactionID}/note/{noteID}:
    put:
      tags:
        - Account Module
      summary: Modify transaction's note
      description: API for modifying a note of a transaction
      security:
        - Bearer: []
      parameters:
        - in: path
          name: transactionID
          description: ID of a transaction
          required: true
          type: string
        - in: path
          name: noteID
          description: ID of a note
          required: true
          type: string
        - in: body
          name: note
          description: Modify transaction's note
          required: true
          schema:
            $ref: "#/definitions/TransactionNote"
      responses:
        "200":
          description: Note modified successfully
          schema:
            $ref: "#/definitions/TransactionResponseNote"
        "401":
          description: Unauthorized user
        "404":
          description: Note not modified
        "500":
          description: Internal Server Error
    delete:
      tags:
        - Account Module
      summary: Delete transaction's note
      description: API for deleting a note of a transaction
      security:
        - Bearer: []
      parameters:
        - in: path
          name: transactionID
          description: ID of a transaction
          required: true
          type: string
        - in: path
          name: noteID
          description: ID of a note
          required: true
          type: string
      responses:
        "200":
          description: Note deleted successfully
        "401":
          description: Unauthorized user
        "404":
          description: Note not deleted
        "500":
          description: Internal Server Error
  /categories:
    get:
      summary: Retrieve all categories
      description: Fetch all available categories
      security:
        - Bearer: []
      responses:
        "200":
          description: Categories retrieved successfully
          schema:
            $ref: "#/definitions/CategoryList"
          examples:
            application/json:
              - id: 1
                name: "Food"
              - id: 2
                name: "Shopping"
              - id: 3
                name: "Entertainment"
        "500":
          description: Internal Server Error
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
      userName:
        type: string
        description: user public name
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  GetAccountTransactionsApiResponse:
    type: array
    items:
      type: object
      properties:
        TransactionId:
          type: string
        date:
          type: string
          format: date
        description:
          type: string
        amount:
          type: number
        balance:
          type: number
  GetTransactionApiResponse:
    type: object
    properties:
      transactionType:
        type: string
      category:
        type: array
        items:
          type: object
          properties:
            id:
              type: string
            name:
              type: string
            description:
              type: string
      note:
        type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      userName:
        type: string
  CategoryList:
    type: array
    items:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
  TransactionCategory:
    type: object
    properties:
      category:
        type: string
        description: "La catégorie de la transaction"
        enum:
          - "Food"
          - "Shopping"
          - "Entertainment"
  TransactionNote:
    type: object
    properties:
      note:
        type: string
  TransactionResponseNote:
    type: object
    properties:
      note:
        type: string
      noteID:
        type: string
